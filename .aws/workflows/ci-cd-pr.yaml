version: 0.2

env:
  variables:
     APP_NAME: "hello-world-nodejs"
     ECR_REPO_NAME: "hello-world-nodejs-ecr"
phases:
  install:
    #If you use the Ubuntu standard image 2.0 or later, you must specify runtime-versions.
    #If you specify runtime-versions and use an image other than Ubuntu standard image 2.0, the build fails.
    runtime-versions:
      nodejs: 16
    commands:
      - echo Installing source NPM dependencies...
      - npm install
      - echo $RELEASE_VERSION
      - nohup /usr/local/bin/dockerd --host=unix:///var/run/docker.sock --host=tcp://127.0.0.1:2375 --storage-driver=overlay2 &
      - timeout 15 sh -c "until docker info; do echo .; sleep 1; done"      
  pre_build:
    commands:
      - ls -lt
      - cat README.md
      - echo aws login
      - aws ecr get-login-password --region ca-central-1 | docker login --username AWS --password-stdin 131485263174.dkr.ecr.ca-central-1.amazonaws.com
  build:
    commands:
      - echo Build started on `date`
      - echo Testing app $APP_NAME...  
      - IMAGE_TAG=`echo $CODEBUILD_BUILD_NUMBER`
      - echo IMAGE_TAG $IMAGE_TAG
      - docker container ls
      - docker ps
      - docker images
      #- echo Build started on `date`
      - echo Building the Docker image...          
      - docker build -t $APP_NAME:$IMAGE_TAG .
      - docker run -d --name $APP_NAME -p 5000:5000 $APP_NAME:$IMAGE_TAG
      - docker logs $APP_NAME
      - curl http://localhost:5000
      - docker tag $APP_NAME:$IMAGE_TAG 131485263174.dkr.ecr.ca-central-1.amazonaws.com/$ECR_REPO_NAME:$IMAGE_TAG
      - docker ps
      - docker images  
      - echo printing env values
      - env
  post_build:
    commands:
      - echo Build completed on `date`
      - echo Pushing the Docker image...
      - docker push 131485263174.dkr.ecr.ca-central-1.amazonaws.com/$ECR_REPO_NAME:$IMAGE_TAG
      - ./scan-image.sh $CODEBUILD_RESOLVED_SOURCE_VERSION $IMAGE_REPO_NAME
      - echo Stop and remove container and images
      - docker stop $APP_NAME
      - docker rm $APP_NAME
      - docker rmi 131485263174.dkr.ecr.ca-central-1.amazonaws.com/$ECR_REPO_NAME:$IMAGE_TAG
      - docker rmi $APP_NAME:$IMAGE_TAG
      - docker ps
      - docker images
      - echo bye bye
#reports:
  #report-name-or-arn:
    #files:
      # - location
      # - location
    #base-directory: location
    #discard-paths: yes
    #file-format: JunitXml | CucumberJson
#artifacts:
  #files:
    # - location
    # - location
  #name: $(date +%Y-%m-%d)
  #discard-paths: yes
  #base-directory: location
#cache:
  #paths:
    # - paths